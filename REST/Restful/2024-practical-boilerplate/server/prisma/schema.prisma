generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Menu {
  id           String     @id @default(uuid())
  name         String
  restaurantId String
  description  String
  icon         String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
  products     Product[]
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Order {
  id            String        @id @default(uuid())
  userId        String
  productId     String
  quantity      Int
  paymentStatus PaymentStatus
  total         Int
  paymentDate   DateTime
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?
  user          User          @relation(fields: [userId], references: [id])
  product       Product       @relation(fields: [productId], references: [id])
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String
  type        String
  stockStatus StockStatus
  price       Float
  quantity    Int
  menuId      String
  thumbnail   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  menu        Menu        @relation(fields: [menuId], references: [id], onDelete: Cascade)
  orders      Order[]
}

model Restaurant {
  id          String           @id @default(uuid())
  title       String
  location    String
  status      RestaurantStatus
  thumbnail   String
  description String
  rating      Float
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?
  menus       Menu[]
}

model User {
  id        String    @id @default(uuid())
  fullName  String
  email     String    @unique
  password  String
  role      UserRole
  telephone String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  orders    Order[]
}

enum PaymentStatus {
  pending
  paid
  failed
}

enum StockStatus {
  available
  not_available
}

enum RestaurantStatus {
  open
  full
  clowded
  quiet
  moderate
}

enum UserRole {
  admin
  user
}
