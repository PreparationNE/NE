{
    "openapi": "3.0.1",
    "info": {
        "title": "Library Information Management System",
        "description": "API documentation for the system",
        "version": "1.0.0",
        "contact": {
            "name": "Mike Nzabera",
            "email": "nzaberamikepeter@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:8000/api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login a student",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new Student",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Student"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/elections": {
            "get": {
                "summary": "Get all elections",
                "tags": [
                    "Elections"
                ],
                "responses": {
                    "200": {
                        "description": "List of elections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Election"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new election",
                "tags": [
                    "Elections"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Election"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Election created"
                    }
                }
            }
        },
        "/elections/{id}": {
            "get": {
                "summary": "Get election by ID",
                "tags": [
                    "Elections"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Election details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Election"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an election",
                "tags": [
                    "Elections"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Election"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Election updated"
                    }
                }
            },
            "delete": {
                "summary": "Delete an election",
                "tags": [
                    "Elections"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Election deleted"
                    }
                }
            }
        },
        "/candidates": {
            "get": {
                "summary": "Get all candidates",
                "tags": [
                    "Candidates"
                ],
                "responses": {
                    "200": {
                        "description": "List of candidates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Candidate"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new candidate",
                "tags": [
                    "Candidates"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Candidate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Candidate created"
                    }
                }
            }
        },
        "/candidates/{id}": {
            "get": {
                "summary": "Get candidate by ID",
                "tags": [
                    "Candidates"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Candidate details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Candidate"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a candidate",
                "tags": [
                    "Candidates"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Candidate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Candidate updated"
                    }
                }
            },
            "delete": {
                "summary": "Delete a candidate",
                "tags": [
                    "Candidates"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Candidate deleted"
                    }
                }
            }
        },
        "/candidates/elections/{electionId}/candidates/{candidateId}/vote": {
            "post": {
                "summary": "Cast a vote for a candidate",
                "tags": [
                    "Voting"
                ],
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the election"
                    },
                    {
                        "name": "candidateId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the candidate to vote for"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote successfully cast",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or vote failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Student": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "example": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john.doe@example.com",
                    "password": "password"
                }
            },
            "StudentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "Books": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "publicationYear": {
                        "type": "number"
                    },
                    "subject": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "The Alchemist",
                    "author": "Paulo Coelho",
                    "publisher": "HarperCollins",
                    "publicationYear": 1988,
                    "subject": "Fiction"
                }
            },
            "BookResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "publicationYear": {
                        "type": "number"
                    },
                    "subject": {
                        "type": "string"
                    }
                }
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string"
                    },
                    "tokenType": {
                        "type": "string"
                    }
                },
                "example": {
                    "accessToken": "jwt-token-here",
                    "tokenType": "Bearer"
                }
            },
            "Election": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "example": {
                    "title": "Student Council 2025",
                    "description": "Annual election for student leadership",
                    "startDate": "2025-06-01",
                    "endDate": "2025-06-15"
                }
            },
            "Candidate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "electionId": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Alice Smith",
                    "description": "President",
                    "electionId": "election-123"
                }
            }
        }
    }
}